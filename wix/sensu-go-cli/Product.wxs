<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi"
     xmlns:util="http://schemas.microsoft.com/wix/UtilExtension">

  <!-- Include defined variables -->
  <?include Product.Var.wxi ?>

  <!-- The upgrade code must never change as long as this product lives! -->
  <!-- Product IDs must be autogenerated (*) or else major upgrades will not work -->
  <Product Id="*"
           Name="!(loc.ApplicationFullName)"
           Manufacturer="!(loc.ManufacturerFullName)"
           Version="$(var.ProductVersion)"
           UpgradeCode="$(var.UpgradeCode)"
           Language="1033">

    <!-- Package IDs are valid for a single package version only - they are autogenerated by WiX -->
    <Package Id="*"
             InstallerVersion="200"
             Compressed="yes"
             Description="!(loc.ProductDescription)"
             Comments="!(loc.Comments)"
             InstallScope="perMachine" />

    <!-- License agreement -->
    <WixVariable Id="WixUILicenseRtf" Value="$(var.sensuLicenseSourcePath)" />

    <!-- UI customization -->
    <WixVariable Id="WixUIBannerBmp" Value="$(var.bannerBmpPath)" />
    <WixVariable Id="WixUIDialogBmp" Value="$(var.dialogBmpPath)" />

    <!-- Define icons (ID should not be longer than 18 chars and must end with ".exe") -->
    <Icon Id="Icon.exe" SourceFile="$(var.iconPath)" />

    <!-- Set properties for Programs & Features (Add/Remove Programs) -->
    <Property Id="ARPPRODUCTICON" Value="Icon.exe" />
    <Property Id="ARPHELPLINK" Value="$(var.InfoURL)" />
    <!--<Property Id="ARPNOREPAIR" Value="yes" Secure="yes" />--> <!-- Remove repair -->
    <Property Id="ARPNOMODIFY" Value="yes" Secure="yes" /> <!-- Remove modify -->

    <!-- Disable the "uninstall requires a reboot" prompt -->
    <!-- <Property Id="MSIRESTARTMANAGERCONTROL" Value="Disable"/> -->

    <!-- Upgrade logic -->
    <!-- AllowSameVersionUpgrades -> Always upgrade, never allow two versions to be installed -->
    <!-- AllowSameVersionUpgrades causes ICE61 which must be ignored -->
    <MajorUpgrade DowngradeErrorMessage="!(loc.NewerInstalled)"
                  AllowSameVersionUpgrades="yes"
                  AllowDowngrades="no" />

    <!-- This is the main installer sequence run when the product is actually installed -->
    <InstallExecuteSequence>

      <!-- Determine the install location after the install path has been validated -->
      <Custom Action="SetARPINSTALLLOCATION" After="InstallValidate"></Custom>

    </InstallExecuteSequence>

    <!--
      Set up ARPINSTALLLOCATION property
      (http://blogs.technet.com/b/alexshev/archive/2008/02/09/from-msi-to-wix-part-2.aspx)
    -->
    <CustomAction Id="SetARPINSTALLLOCATION" Property="ARPINSTALLLOCATION" Value="[INSTALLDIR]" />

    <!-- Launch conditions
      Restrict to >= Windows 2000
      (https://msdn.microsoft.com/en-us/library/windows/desktop/aa370556(v=vs.85).aspx)
    -->
    <Condition Message="!(loc.OS2Old)">
      <![CDATA[Installed or (VersionNT >= 500)]]>
    </Condition>

    <!--
      Determine the directory of a previous installation (if one exists)
      If not, INSTALLDIR stays empty
    -->
    <Property Id="INSTALLDIR">
      <RegistrySearch Id="DetermineInstallLocation"
                      Type="raw"
                      Root="HKLM"
                      Key="Software\!(loc.ManufacturerName)\InstalledProducts\!(loc.ApplicationName)"
                      Name="InstallLocation" />
    </Property>

    <!--
      ===========================================================================================
      Directory structure
      ===========================================================================================
    -->

    <!-- We do not have more than one medium (Floppy, CD, ...) -->
    <Media Id="1" Cabinet="media1.cab" EmbedCab="yes" />

    <!-- Outermost folder (kind of virtual). Fixed entry. -->
    <Directory Id="TARGETDIR" Name="SourceDir">

      <!--
        We start building our directory structure here
        "ProgramFilesFolder" is a variable containing the absolute path
        For a list of folder variables, see:
        http://msdn.microsoft.com/en-us/library/aa372057%28VS.85%29.aspx
      -->
      <Directory Id="$(var.PlatformProgramFilesFolder)">

        <!-- All folders from here on are relative to their parent -->
        <Directory Id="ProgramFilesHK" Name="!(loc.ManufacturerName)">

          <!-- INSTALLDIR is a property name. We need it later for the UI, so it can be changed -->
          <Directory Id="INSTALLDIR" Name="!(loc.ApplicationName)">
            <!--
              Components - the building blocks of MSIs
              A component should only contain items that need to be installed or
              removed together
            -->

            <!--
              Installation directory as a component so it can be emptied during
              uninstall. Files added by anyone other than the installer will not
              be removed (by default).
            -->
            <Component Id="INSTALLDIR_comp" Guid="065B8879-540F-460E-A376-F297E06D0B1D">
              <CreateFolder />
            </Component>

            <!-- Main program files -->
            <Directory Id="sensuctlBinDir" Name="bin">
              <Component Id="sensuctlBinDir_comp"
                         Guid="35faa42e-b600-4ce9-80d1-e03d7fdf8183">
                <CreateFolder />
                <Environment Id="PATH" Name="PATH" Value="[INSTALLDIR]\bin" Permanent="yes" Part="last" Action="set" System="yes" />
              </Component>

              <Component Id="sensuctl.exe_comp" Guid="*" Win64="$(var.Win64)">
                <File Id="sensuctlExe" Source="$(var.sensuctlExeSourcePath)"
                      KeyPath="yes" />
              </Component>
            </Directory>
          </Directory>
        </Directory>
      </Directory>

      <!-- Registry entries -->
      <Component Id="RegValInstallLocation_comp" Guid="D752C12C-F22D-4ACC-905B-88183114DFC9">
        <!--
          Do NOT use the application's default registry key here, because this
          key will be removed on uninstall
        -->
        <RegistryKey Root="HKLM"
                     Key="Software\!(loc.ManufacturerName)\InstalledProducts\!(loc.ApplicationName)">

          <RegistryValue Name="InstallLocation" Value="[INSTALLDIR]" Type="string" KeyPath="yes" />
        </RegistryKey>
      </Component>
    </Directory>

    <!-- Features define which parts of the app can be installed in custom installations -->
    <Feature Id="Complete"
             Title="!(loc.ApplicationFullName)"
             Description="!(loc.FeatureCompleteDescription)"
             Display="expand"
             Level="1"
             ConfigurableDirectory="INSTALLDIR">
      
      <!-- A feature block for the main program and all of its dependencies -->
      <Feature Id="MainProgram"
               Title="!(loc.FeatureMainProgramTitle)"
               Description="!(loc.FeatureMainProgramDescription)"
               Level="1">

        <ComponentRef Id="INSTALLDIR_comp" />
        <ComponentRef Id="sensuctlBinDir_comp" />
        <ComponentRef Id="sensuctl.exe_comp" />

        <!-- Registry entries -->
        <ComponentRef Id="RegValInstallLocation_comp" />

      </Feature>
    </Feature>
    
    <UI>
      <!-- Define the installer UI -->
      <UIRef Id="WixUI_HK" />
    </UI>
    
    <Property Id="WIXUI_INSTALLDIR" Value="INSTALLDIR" />
    
  </Product>
</Wix>
